import Head from 'next/head'
import Image from 'next/image'
import { Geist, Geist_Mono } from 'next/font/google'
import MdxLexer from '../../components/MarkdownLexer'
import styles from '@/styles/Home.module.css'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin']
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin']
})

export default function Home() {
  const mdx = [
    '```md',
    '## Sample Markdown ',
    '<!-- js:index.js -->',
    'function sample() {',
    '  return <></>;',
    '}',
    '',
    '<!-- css:main.css -->',
    'body {',
    '  color: red;',
    '}',
    '```',
    '## テスト'
  ].join('\n')

  const mdx2 = [
    '```js',
    'function sample() {',
    '  return <></>;',
    '}',
    '',
    '```',
    '## テスト'
  ].join('\n')

  // TODO
  // 未定義の jsx コンポーネントを md のトップレベルで定義すると MarkdownLexer.tsx
  // でコンパイルエラーとなる
  // エラーにならないようにしたい。例えば、未定義であればそれは文字列として扱うようにする
  // 例 . <Tomato /> これは未定義のため "<Tomato />"として使う

  const mdx3 = [
    '# Content tabs',
    '## 概要',
    'Markdown の AST（抽象構文木）を走査し、以下の形式で書かれた「タブ記法」を検出して MDX のカスタム要素に変換。',
    '',
    '### Hedding',
    '=== "タブ1"',
    '  ## ほげ1',
    '===',
    '',
    '=== "タブ1"',
    '  ## ほげ2',
    '===',
    '',
    '### リスト',
    '=== "Unordered list"',
    '* ほげ',
    '* ほげ',
    '* ほげ',
    '',
    '===',
    '',
    '=== "Ordered list"',
    '1. ほげ',
    '2. ほげ',
    '3. ほげ',
    '',
    '===',
    '',
    '### コードブロック',
    '=== "hello.ts"',
    '```ts',
    'import type {NextApiRequest, NextApiResponse} from "next"',
    'type Data = {',
    '  name: string',
    '}',
    '',
    'export default function handler(',
    '  request: NextApiRequest,',
    '  res: NextApiResponse<Data>',
    ') {',
    '  res.status(200).json({name: "John Doe"})',
    '}',
    '',
    '```',
    '===',
    '',
    '=== "hello.js"',
    '```js',
    '"use strict"',
    'Object.defineProperty(exports, "__esModule", {value: true})',
    'exports.default = handler',
    'function handler(request, res) {',
    '  res.status(200).json({name: "John Doe"})',
    '}',
    '```',
    '===',
    '',
  ].join('\n')

  const mdx5 = [
    '## other',
    '=== "other1"',
    '  ## H2',
    '=== "other2"',
    '  ## H1',
  ].join('\n')

  const mdx4 = [
    '=== "Unordered list"',
    '',
    '* Sed sagittis eleifend rutrum',
    '* Donec vitae suscipit est',
    '* Nulla tempor lobortis orci',
    '',
    '=== "Ordered list"',
    '',
    '1. Sed sagittis eleifend rutrum',
    '2. Donec vitae suscipit est',
    '3. Nulla tempor lobortis orci',
  ].join('\n')

  // useEffect(() => {
  //   Test()
  // }, [])
  return (
    <>
      <Head>
        <title>Remark custom page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
      >
        <main className={styles.main}>
          <MdxLexer mdxString={mdx3} />
        </main>
      </div>
    </>
  )
}
